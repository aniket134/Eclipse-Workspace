#include <iostream>
#include <cstdlib>
#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <string>

using namespace std;

void *OneVehicle(void *arg);
sem_t lock;

int main(){
	string cars = "10101000111000110101111000110111010";
	int len = cars.length();
	pthread_t* mythread = new pthread_t[len];
	sem_init(&lock, 0, 1);
	for(int i = 0; i < len; i++){
		int direc = (int)(cars[i] - '0');
		if(pthread_create(&mythread[i], NULL, OneVehicle, (void*)direc)){
			cout<<"Error creating thread.\n";
			abort();
		}
	}
	for(int i = 0; i < len; i++){
		if(pthread_join(mythread[i], NULL)){
			cout<<"Error joining threads.\n";
			abort();
		}
	}

	exit(0);
}

void *OneVehicle(void *arg){
	int i;
	for(i = 0; i < 20; i++){
		cout<<"here: "<<i;
		sleep(1);
	}
	return NULL;
}
